pipeline {
    agent any

     stages {
        stage('Get Code') {
            steps {
                // Obtener c√≥digo del repo
                git branch: 'feature_fix_racecond', url:'https://github.com/fgg1987/calculadora.git'
            }
        }
    
        stage('Build') {
           steps {
              echo 'Eyyy, esto es Python. No hay que compilar nada!!!'
	          echo WORKSPACE
              bat 'dir'
           }
        }
        
        stage('Test') {
            parallel {
                stage('Unit') {
                    steps {
                        catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                            bat '''
                                set PYTHONPATH=%WORKSPACE%
                                python --version
                                pytest --version
                                pytest --junitxml=result-unit.xml test\\unit
                            '''
                       }
                    }
                }   
        
                stage('Rest') {
                    steps {
                        catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
				bat '''
				    set FLASK_APP=app\\api.py
				    set FLASK_ENV=development
				    start flask run
				    start java -jar C:\\Users\\fgonzalez\\Documents\\wiremock-standalone-3.3.1.jar --port 9090 --root-dir C:\\Users\\fgonzalez\\Documents\\proyecto\\calculadora\\test\\wiremock
				    set PYTHONPATH=%WORKSPACE%
				    pytest --junitxml=result-rest.xml test\\rest
				'''
			}
                    }
                }
            }
        }

        stage('Results') {
            steps {
                junit 'result*.xml' 
            }
        }
    }
}
